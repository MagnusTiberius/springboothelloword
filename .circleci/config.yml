# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8u141-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout
      - setup_remote_docker
      #- configure_aws_cli
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      # run tests!
      - run: mvn integration-test

      # generate package
      - run: mvn package

      # call docker to build the image
      - run: docker build -t helloworld .

      # list it
      - run: docker images

      - run:
          name: Install tools
          command: |
            sudo apt-get install python
            sudo apt-get install python-pip
            sudo pip install awscli
            sudo apt-get install awscli

      # Push
      - run:
          name: Login to ECR and push docker container
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              login="$(aws ecr get-login --no-include-email )"
              ${login}
              docker tag helloworld $AWS_ACCOUNT_ID.dkr.ecr.us-east-2.amazonaws.com/austinmopac:helloworld$CIRCLE_BUILD_NUM
              docker push $AWS_ACCOUNT_ID.dkr.ecr.us-east-2.amazonaws.com/austinmopac:helloworld$CIRCLE_BUILD_NUM
            fi
